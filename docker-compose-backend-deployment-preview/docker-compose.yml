version: '3.3'

services:
  redis:
    # Adjust the build context to your needs targetting the created Dockerfile
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    # Run as privileged to allow the container to change the vm.overcommit_memory setting
    privileged: true
    volumes:
      - ./docker/data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: prodcontrol-pgbouncer
    env_file:
      - .env
    environment:
      # Multi-tenant database configuration - wildcard allows any database
      DATABASES: "* = host=${DB_HOST} port=${DB_PORT} user=${DB_USER} password=${DB_PASSWORD}"
      
      # SAAS-optimized pool configuration
      POOL_MODE: session
      DEFAULT_POOL_SIZE: 10   # Smaller pools per database
      MIN_POOL_SIZE: 2        # Minimum connections per database
      RESERVE_POOL_SIZE: 2
      RESERVE_POOL_TIMEOUT: 3
      MAX_CLIENT_CONN: 1000
      MAX_DB_CONNECTIONS: 50  # Total across all databases
      
      # Multi-tenant friendly settings
      SERVER_RESET_QUERY: ""
      SERVER_RESET_QUERY_ALWAYS: 0
      IGNORE_STARTUP_PARAMETERS: "extra_float_digits,search_path,application_name"
      APPLICATION_NAME_ADD_HOST: 1
      
      # Timeouts
      SERVER_CHECK_DELAY: 30
      SERVER_CHECK_QUERY: "select 1"
      SERVER_LIFETIME: 3600
      SERVER_IDLE_TIMEOUT: 600
      QUERY_TIMEOUT: 300
      CLIENT_IDLE_TIMEOUT: 120
      
      # Minimal logging
      LOG_CONNECTIONS: 0
      LOG_DISCONNECTIONS: 0
      LOG_POOLER_ERRORS: 1
      
    ports:
      - "6432:5432"  # PgBouncer port
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 6432"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: jlucasamorim/prodsistem-preview:latest
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: pgbouncer
      DB_PORT: 6432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 8080
    depends_on:
      pgbouncer:
        condition: service_healthy 
      redis:
        condition: service_healthy
